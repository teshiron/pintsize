#!/usr/bin/perl -w
#
# hysteresis -- restart a program but not necessarily right away

use strict;
use File::Basename qw(basename);

usage() unless defined $ARGV[1];

my $cycle = shift;
my $i;

while () 
{
    my $start = time;
    $i++;
    
    warn "** ----------------------------------------------------\n";
    warn "** running:    " . join(',', @ARGV) . "\n";
    warn "** hysteresis: $cycle s\n";
    warn "** iteration:  $i\n";
    warn "** date:       " . scalar localtime() . "\n";
    
    my $rv = system(@ARGV);
    warn "** iteration $i exited with status $rv\n";

    my $elapsed = time - $start;
    if ($elapsed < $cycle)
    {
        my $delay = $cycle - $elapsed;
        warn "** terminated early -- waiting $delay s\n";
        sleep ($delay);
    }
}

sub usage
{
    my $me = basename $0;
    print STDERR <<USAGE;
$me -- restart a program but not necessarily right away

Usage: $me delay command [arguments]

Continually restarts 'command' (with optional arguments), such that
'command' will only restart every 'delay' seconds at minimum.

This program is part of the 'flooterbuck' infobot distribution,
available at http://flooterbuck.sourceforge.net/. 
USAGE
  
    exit 1;
}

